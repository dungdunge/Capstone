import React, { useEffect, useState, useContext, useCallback } from 'react';
import axios from 'axios';
import { useNavigate } from 'react-router-dom';
import AppContext from './AppContext';
import './ChatHistory.css'; // CSS ÌååÏùºÏùÑ Îî∞Î°ú ÎßåÎì§Ïñ¥ÏÑú Ïä§ÌÉÄÏùºÎßÅ
import { IoTime, IoChatbubblesOutline, IoHomeOutline, IoPeopleOutline, IoPersonOutline } from 'react-icons/io5'; // ÏïÑÏù¥ÏΩò ÏÇ¨Ïö©

const animalEmojis = [
    'üê∂', 'üê±', 'üê∞', 'üêª', 'ü¶ä', 'ü¶Å', 'üêº', 'üê®', 'üê∑', 'üê∏', 'üê¢', 'üêµ'
];

const ChatHistory = () => {
    const [chatRooms, setChatRooms] = useState([]);
    const { responseUsername } = useContext(AppContext); // ÎãâÎÑ§ÏûÑ Í∞ÄÏ†∏Ïò§Í∏∞
    const navigate = useNavigate(); // navigation Í∞ùÏ≤¥ Í∞ÄÏ†∏Ïò§Í∏∞

    const fetchChatHistory = useCallback(() => {
        const data = {
            nickname: responseUsername,
        };
        axios.post('https://equal-duck-suitable.ngrok-free.app/main/history', data, {
            headers: {
                'Content-Type': 'application/json',
                'ngrok-skip-browser-warning': '69420',
            }
        })
            .then(response => {
                console.log(response.data);
                setChatRooms(response.data); // Ï±ÑÌåÖ Í∏∞Î°ù ÏóÖÎç∞Ïù¥Ìä∏
            })
            .catch(error => {
                console.error("Ï±ÑÌåÖ Í∏∞Î°ù Í∞ÄÏ†∏Ïò§Í∏∞ Ïò§Î•ò:", error);
            });
    }, [responseUsername]); // dataÍ∞Ä Î≥ÄÍ≤ΩÎê† Í≤ΩÏö∞ÏóêÎßå Ìï®ÏàòÍ∞Ä ÏÉàÎ°ú ÏÉùÏÑ±Îê®
    useEffect(() => {
        fetchChatHistory();
    }, [fetchChatHistory]);
    const getRandomEmoji = () => {
        return animalEmojis[Math.floor(Math.random() * animalEmojis.length)];
    };

    const handleChatSelect = (roomId, roomName) => {
        navigate(`/chatroom/${roomId}/${roomName}`); // Ï±ÑÌåÖÎ∞©ÏúºÎ°ú Ïù¥Îèô
    };

    const handleMyInfo = () => {
        navigate('/myinfo'); // ÎÇ¥ Ï†ïÎ≥¥ ÌéòÏù¥ÏßÄÎ°ú Ïù¥Îèô
    };

    const handleFriendList = () => {
        navigate('/friendlist'); // ÏπúÍµ¨ Î™©Î°ù ÌéòÏù¥ÏßÄÎ°ú Ïù¥Îèô
    };

    const handleChatRoomList = () => {
        navigate('/chatroomlist'); // Î©îÏù∏ ÌéòÏù¥ÏßÄÎ°ú Ïù¥Îèô
    };

    const handleMyChat = () => {
        navigate('/mychat'); // ÎÇ¥ Ï±ÑÌåÖ ÌéòÏù¥ÏßÄÎ°ú Ïù¥Îèô
    };

    const handleChatHistory = () => {
        navigate('/chathistory'); // Ï±ÑÌåÖ Í∏∞Î°ù ÌéòÏù¥ÏßÄÎ°ú Ïù¥Îèô
    };
    return (
        <div className="chat-history">
            <header className="nav-bar">
                <h1>Ï±ÑÌåÖ Í∏∞Î°ù</h1>
            </header>

            <div className="chat-list">
                {chatRooms.map(item => (
                    <div key={item.id} className="chat-item" onClick={() => handleChatSelect(item.id, item.name)}>
                        <span className="chat-text">
                            {getRandomEmoji()} {item.name}
                        </span>
                    </div>
                ))}
            </div>

            {/* ÌïòÎã® ÎÑ§ÎπÑÍ≤åÏù¥ÏÖò Î∞î Ï∂îÍ∞Ä */}
            <div className="bottomNav">
                <div className="navItem" onClick={handleChatHistory}>
                    <IoTime size={30} color="#7BAFD4" />
                    <span>Í∏∞Î°ù</span>
                </div>
                <div className="navItem" onClick={handleMyChat}>
                    <IoChatbubblesOutline size={30} color="#7BAFD4" />
                    <span>ÎÇ¥ Ï±ÑÌåÖ</span>
                </div>
                <div className="navItem" onClick={handleChatRoomList}>
                    <IoHomeOutline size={30} color="#7BAFD4" />
                    <span>Î©îÏù∏</span>
                </div>
                <div className="navItem" onClick={handleFriendList}>
                    <IoPeopleOutline size={30} color="#7BAFD4" />
                    <span>ÏπúÍµ¨</span>
                </div>
                <div className="navItem" onClick={handleMyInfo}>
                    <IoPersonOutline size={30} color="#7BAFD4" />
                    <span>ÎÇ¥ Ï†ïÎ≥¥</span>
                </div>
            </div>
        </div>
    );
};

export default ChatHistory;
